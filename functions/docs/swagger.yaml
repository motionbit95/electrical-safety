openapi: "3.0.0"
info:
  title: "전기안전 - Firebase Functions API"
  version: "1.0.0"
  description: |
    ## 🚀 Endpoint
    배포가 완료되면 아래 주소에서 API를 확인할 수 있습니다.

    - `https://us-central1-electrical-safety-4c9bd.cloudfunctions.net/api`
      <br>  <br>
    - `https://api-2hj4xnf47q-uc.a.run.app`

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: "회원가입"
      description: "새로운 사용자를 등록하는 API입니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - user_pw
              properties:
                user_id:
                  type: string
                  description: "사용자의 고유 아이디"
                user_pw:
                  type: string
                  description: "사용자의 비밀번호"
      responses:
        201:
          description: "회원가입 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원가입 성공"
        400:
          description: "잘못된 요청 (user_id 또는 user_pw가 누락된 경우)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1000
                  message:
                    type: string
                    example: "user_id와 user_pw를 입력하세요."
        409:
          description: "이미 존재하는 사용자 ID"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1001
                  message:
                    type: string
                    example: "이미 존재하는 user_id입니다."
        500:
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1002
                  message:
                    type: string
                    example: "회원가입 중 서버 오류가 발생했습니다."

  /auth/login:
    post:
      tags:
        - Auth
      summary: "로그인"
      description: "user_id와 user_pw로 로그인하고 JWT 토큰을 발급받는 API입니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - user_pw
              properties:
                user_id:
                  type: string
                  description: "사용자의 고유 아이디"
                user_pw:
                  type: string
                  description: "사용자의 비밀번호"
      responses:
        200:
          description: "로그인 성공 (JWT 토큰 포함)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인 성공"
                  token:
                    type: string
                    description: "JWT 토큰"
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  lastActiveAt:
                    type: string
                    format: date-time
                    description: "마지막 로그인 시간"
                    example: "2025-01-23T12:34:56.789Z"
        400:
          description: "잘못된 요청 (user_id 또는 user_pw가 올바르지 않음)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1000
                  message:
                    type: string
                    example: "user_id와 user_pw를 입력하세요."
        404:
          description: "존재하지 않는 user_id"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1001
                  message:
                    type: string
                    example: "존재하지 않는 user_id입니다."
        401:
          description: "비밀번호가 일치하지 않음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1003
                  message:
                    type: string
                    example: "비밀번호가 일치하지 않습니다."
        500:
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1004
                  message:
                    type: string
                    example: "로그인 처리 중 서버 오류가 발생했습니다."

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
